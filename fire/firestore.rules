rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if isAdmin();
    }

    match /users/{userId} {
    	allow read;
      allow create, delete: if
      	signedIn() && isOwner(userId) && !incomingData().admin;

      allow update: if
      	signedIn() && isOwner(userId) && incomingData().admin <= existingData().admin;
    }

    match /projects/{projectId} {
      allow read: if existingData().public;
      allow write: if isAdmin();
    }

    match /dictionaries/{language} {
      allow read;
      allow write: if isAdmin();
    }

    //////////////////
    //// Function ////
    //////////////////

  	function incomingData() {
    	return request.resource.data;
    }

    function existingData() {
    	return resource.data;
    }

    function isOwner(userId) {
    	return request.auth.uid == userId;
    }

//    Checks if user is signed in, exists, and is admin
    function isAdmin() {
    	return signedIn() &&
          exists(/users/$(request.auth.uid)) &&
          get(/users/$(request.auth.uid)).data.admin;
    }

    function signedIn() {
    	return request.auth != null;
    }
  }
}
